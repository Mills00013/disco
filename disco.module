<?php

/**
 * @file
 *
 * Generate random colors for elements on a page
 *
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function disco_help($path, $arg) {
  // Switch based on where we're at in Drupal
  switch ($path) {
    case "admin/help#disco":
      // When we're in the admin menu, tell the user generically what this is
      return '<p>' . t("Generate randomly applied colors to most elements on a page.") . '</p>';
      break;
  }
}

/**
 * Function to generate a single byte for a HEX color code.
 */
function _disco_generate_color_byte() {
  return str_pad( dechex( mt_rand( 0, 255 ) ), 2, '0', STR_PAD_LEFT);
}

/**
 * Function to create a full color code (without the hash)
 */
function _disco_generate_color() {
  return _disco_generate_color_byte() . _disco_generate_color_byte() . _disco_generate_color_byte();
}

/**
 * Function to create style attributes
 */
function _disco_generate_style() {
  $style = '';

  $colors = variable_get('disco_color');
  if ($colors['color'] === 'color') {
    $style .= 'color:#' . _disco_generate_color() . ';';
  }
  if ($colors['bgcolor'] === 'bgcolor') {
    $style .= 'background-color:#' . _disco_generate_color() . ';';
  }

  return $style;
}

/**
 * Implements template_process_html().
 *
 * Process variables for html.tpl.php
 *
 * @param vars 
 *   Array that holds all the HTML information ready to render
 */
function disco_process_html(&$vars) {
  $html = new DOMDocument();
  //TODO Investigate why this shit below breaks admin pages
  //@$html->loadHTML($vars['page'], LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
  @$html->loadHTML($vars['page']);
  $xpath = new DOMXPath($html);

  if (_disco_generate_style() != '') {
    foreach($xpath->query("//*") as $node) {
        $node->setAttribute("style", _disco_generate_style());
    }
  }

  $discoHtml = $html->saveHtml();
  $vars['page'] = $discoHtml;
}

/**
 * Implements hook_menu().
 *
 * Generates menu items and permissions for administration.
 */
function disco_menu() {
  // Create the menu
  $items = array();

  $items['admin/config/user-interface/disco'] = array(
    'title' => 'Disco',
    'description' => 'Configuration for Disco',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('disco_settings_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback: Disco settings
 *
 * @see disco_menu()
 */
function disco_settings_form($form, &$form_state) {
  $disco_color_values = array(
    'color' => t('Text Color'),
    'bgcolor' => t('Background Color'),
  );

  $form['disco_color'] = array(
    '#type' => 'fieldset',
    '#title' => t('Color Options'),
  );
  $form['disco_color']['disco_color_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Colors Enabled'),
    '#default_value' => variable_get('disco_color_enabled'),
  );
  $form['disco_color']['disco_color_settings'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Options'),
    '#options' => $disco_color_values,
    '#default_value' => variable_get('disco_color_settings'),
    '#description' => t('Select which color options you want to apply.'),
    '#states' => array(
      'visible' => array(
        ':input[name="disco_color_enabled"]' => array('checked' => TRUE))),
  );


  $disco_shadow_values = array(
    'rancolor' => t('Random Colors'),
    'ranopacity' => t('Random Opacities'),
    'randepth' => t('Random Depth'),
  );

  $form['disco_shadows'] = array(
    '#type' => 'fieldset',
    '#title' => t('Shadow Options'),
  );
  $form['disco_shadows']['disco_shadow_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Shadows Enabled'),
    '#default_value' => variable_get('disco_shadow_enabled'),
  );
  $form['disco_shadows']['disco_shadow_settings'] = array(
    '#type' => 'checkboxes',
    '#options' => $disco_shadow_values,
    '#title' => t('Options'),
    '#default_value' => variable_get('disco_shadow_settings'),
    '#description' => t('Select which shadow options you want to apply.'),
    '#states' => array(
      'visible' => array(
        ':input[name="disco_shadow_enabled"]' => array('checked' => TRUE))),
  );


  $disco_font_values = array(
    'ranfont' => t('Random Fonts'),
    'ransize' => t('Random Font Sizes'),
  );

  $form['disco_fonts'] = array(
    '#type' => 'fieldset',
    '#title' => t('Font Options'),
  );
  $form['disco_fonts']['disco_font_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Fonts Enabled'),
    '#default_value' => variable_get('disco_font_enabled'),
  );
  $form['disco_fonts']['disco_font_settings'] = array(
    '#type' => 'checkboxes',
    '#options' => $disco_font_values,
    '#title' => t('Options'),
    '#default_value' => variable_get('disco_font_settings'),
    '#description' => t('Select which font options you want to apply.'),
    '#states' => array(
      'visible' => array(
        ':input[name="disco_font_enabled"]' => array('checked' => TRUE))),
  );


  // Create a submit button and handle variable setting
  return system_settings_form($form);
}
